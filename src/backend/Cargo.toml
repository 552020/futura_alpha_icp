[package]
name = "backend"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["migration", "upload"]
migration = []
personal_canister_creation = []
upload = []

[dependencies]
candid = "0.10"
ic-cdk = "0.18"
ic-cdk-timers = "0.12" 
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
# DO NOT ADD: rand = "0.8" - Causes getrandom WASM compatibility issues
# DO NOT ADD: getrandom = { version = "0.2", features = ["js"] } - Still causes WASM issues
# DO NOT ADD: uuid = { version = "1", features = ["v5", "v7", "serde", "rng-getrandom"] } - Pulls in getrandom
# 
# SOLUTION: Use ICP's native randomness instead:
# - Use ic_cdk::management_canister::raw_rand() for random bytes
# - Use ic_cdk::api::time() for timestamps
# - See: docs/issues/open/uuid-memories/uuid-v7-deployment-wasm-compatibility-issues.md
# - See: docs/issues/open/serving-http/http-module-compilation-wasm-compatibility-issues.md


ic-http-certification = "3.0.3"
http = "1.0"
percent-encoding = "2.3"
ic-stable-structures = "0.6"
regex = "1.10"
sha2 = "0.10"
hex = "0.4"
base64 = "0.22"
bitflags = { version = "2.4", features = ["serde"] }
hmac = "0.12"
once_cell = "1.19"

[dev-dependencies]
tokio = { version = "1.0", features = ["full"] }
mockall = "0.12"
proptest = "1.0"
pocket-ic = "10.0"
anyhow = "1.0"
